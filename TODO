This to do is just an easy way to get the timings during the evolution of the project.

for now we have a simple matrix matrix multiplication, no optimization but we compile it with -lm -O3 it does :

    importing BLAga
    6.796172426607209
    Matrix multiplication (ColMajor x ColMajor), size: 5x4 * 4x6, iterations: 1000, elapsed time: 0.000699 s, avg per multiplication: 0.000001 s

    1246.9537975998326
    Matrix multiplication (ColMajor x ColMajor), size: 50x50 * 50x50, iterations: 500, elapsed time: 0.031223 s, avg per multiplication: 0.000062 s

    19995.857795300562
    Matrix multiplication (ColMajor x ColMajor), size: 200x200 * 200x200, iterations: 100, elapsed time: 0.615166 s, avg per multiplication: 0.006152 s

    499994.57375419006
    Matrix multiplication (ColMajor x ColMajor), size: 1000x1000 * 1000x1000, iterations: 10, elapsed time: 11.580390 s, avg per multiplication: 1.158039 s

    n =  2  time =  6.981067485980817e-07
    n =  4  time =  6.833395638785043e-07
    n =  8  time =  8.531621881536432e-07
    n =  16  time =  2.1560089690582856e-06
    n =  32  time =  1.3846379298192043e-05
    n =  64  time =  0.0001469057892005481
    n =  128  time =  0.001573974887530009
    n =  256  time =  0.015578548113505045
    n =  512  time =  0.1485910415649414
    n =  1024  time =  1.4157378673553467
    n =  2048  time =  26.395053148269653
    [(2, 6.981067485980817e-07), (4, 6.833395638785043e-07), (8, 8.531621881536432e-07), (16, 2.1560089690582856e-06), (32, 1.3846379298192043e-05), (64, 0.0001469057892005481), (128, 0.001573974887530009), (256, 0.015578548113505045), (512, 0.1485910415649414), (1024, 1.4157378673553467), (2048, 26.395053148269653)]